name: Build and Deploy

on:

  push:

    branches:

      - master

jobs:

  build:
    permissions: write-all
    runs-on: windows-latest

    steps:

    - name: Checkout repository

      uses: actions/checkout@v2

    - name: Setup .NET

      uses: actions/setup-dotnet@v1

      with:

        dotnet-version: '6.0' # Update with the appropriate .NET version
      
    - name: Determine Release Version
      id: version
      run: echo "::set-output name=version::v$(date +'%Y%m%d').$GITHUB_RUN_NUMBER"

    - name: Restore dependencies

      run: dotnet restore

    - name: Build application

      run: dotnet build --configuration Release

    - name: Publish application

      run: dotnet publish --configuration Release --output ./publish

    - name: Create Lightweight Tag
      uses: actions/github-script@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const version = '${{ steps.version.outputs.version }}';
          const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
          const { data: refData } = await octokit.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${version}`,
            sha: context.sha
          });
          console.log(`Created tag: ${version}`);

    - name: Upload Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.repository.releases_url }}/tags/${{ steps.version.outputs.version }}/assets
        asset_path: ./publish/YourAppName.dll
        asset_name: YourAppName.exe
        asset_content_type: application/octet-stream
